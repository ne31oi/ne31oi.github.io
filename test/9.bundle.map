{"version":3,"sources":["webpack:///./src/app/chartlib/chartlib.component.ts","webpack:///./src/app/chartlib/chartlib.routing.ts","webpack:///./src/app/chartlib/chartlib.component.scss","webpack:///./src/app/chartlib/chartlib.component.html","webpack:///./src/app/chartlib/chartlib.module.ts","webpack:///./~/ng2-charts/charts/charts.js?1af3*","webpack:///./~/ng2-charts/index.js?6715*","webpack:///./~/ng2-charts/ng2-charts.js?1b18*"],"names":[],"mappings":"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A;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B;AAC5B,iBAAiB;AACjB;AACA;AACA,6BAA6B,oCAAoC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,iCAAiC,wDAAwD,IAAI;AACtG;AACA;AACA,qDAAqD;AACrD,SAAS,2BAA2B;AACpC,MAAM;AACN;AACA,kBAAkB,qBAAqB;AACvC,sBAAsB,qBAAqB;AAC3C,oBAAoB,qBAAqB;AACzC,qBAAqB,qBAAqB;AAC1C,uBAAuB,qBAAqB;AAC5C,oBAAoB,qBAAqB;AACzC,oBAAoB,qBAAqB;AACzC,wBAAwB,sBAAsB;AAC9C,wBAAwB,sBAAsB;AAC9C;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD,yBAAyB,EAAE;AACjF,6CAA6C,eAAe,EAAE;AAC9D,2DAA2D,uBAAuB,EAAE;AACpF,kDAAkD,eAAe,EAAE;AACnE,gEAAgE,uBAAuB,EAAE;AACzF,4DAA4D,uBAAuB,EAAE;AACrF;AACA;AACA;AACA;AACA,sDAAsD,yBAAyB,EAAE;AACjF,kDAAkD,uBAAuB,EAAE;AAC3E,2DAA2D,yBAAyB,EAAE;AACtF,uDAAuD,uBAAuB,EAAE;AAChF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,mBAAmB,WAAW;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,IAAI;AACrB;AACA;AACA,+CAA+C,WAAW;AAC1D;AACA,CAAC;AACD;;;;;;;;;ACjRA;AACA;AACA;AACA;AACA;;;;;;;;;ACJA;AACA;AACA;AACA;AACA","file":"9.chunk.js","sourcesContent":["import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-chartlib',\r\n  templateUrl: './chartlib.component.html',\r\n  styleUrls: ['./chartlib.component.scss']\r\n})\r\nexport class ChartlibComponent {\r\n  constructor() {}\r\n  public globalChartOptions: any = {\r\n      responsive: true,\r\n      legend: {\r\n        display: false,\r\n        position: 'bottom'\r\n      }\r\n    }\r\n  \r\n  // Bar\r\n  public barChartLabels: string[] = ['1', '2', '3', '4', '5', '6', '7'];\r\n  public barChartType: string = 'bar';\r\n  public barChartLegend: boolean = true;\r\n  public barChartData: any[] = [{\r\n    data: [6, 5, 8, 8, 5, 5, 4],\r\n    label: 'Series A',\r\n    borderWidth: 0\r\n  }, {\r\n    data: [5, 4, 4, 2, 6, 2, 5],\r\n    label: 'Series B',\r\n    borderWidth: 0\r\n  }];\r\n  public barChartOptions: any = Object.assign({\r\n    scaleShowVerticalLines: false,\r\n    scales: {\r\n      xAxes: [{\r\n        gridLines: {\r\n          color: 'rgba(0,0,0,0.02)',\r\n          zeroLineColor: 'rgba(0,0,0,0.02)'\r\n        }\r\n      }],\r\n      yAxes: [{\r\n        gridLines: {\r\n          color: 'rgba(0,0,0,0.02)',\r\n          zeroLineColor: 'rgba(0,0,0,0.02)'\r\n        },\r\n        position: 'left',\r\n        ticks: {\r\n          beginAtZero: true,\r\n          suggestedMax: 9\r\n        }\r\n      }]\r\n    }\r\n  }, this.globalChartOptions);\r\n\r\n  // Horizontal Bar Chart\r\n  public barChartHorizontalType: string = 'horizontalBar';\r\n  public barChartHorizontalOptions: any = Object.assign({\r\n    scaleShowVerticalLines: false,\r\n    scales: {\r\n      xAxes: [{\r\n        gridLines: {\r\n          color: 'rgba(0,0,0,0.02)',\r\n          zeroLineColor: 'rgba(0,0,0,0.02)'\r\n        },\r\n        ticks: {\r\n          beginAtZero: true,\r\n          suggestedMax: 9\r\n        }\r\n      }],\r\n      yAxes: [{\r\n        gridLines: {\r\n          color: 'rgba(0,0,0,0.02)',\r\n          zeroLineColor: 'rgba(0,0,0,0.02)'\r\n        }\r\n      }]\r\n    }\r\n  }, this.globalChartOptions);\r\n\r\n  // Bar Chart Stacked\r\n  public barChartStackedOptions: any = Object.assign({\r\n    scaleShowVerticalLines: false,\r\n    tooltips: {\r\n      mode: 'index',\r\n      intersect: false\r\n    },\r\n    responsive: true,\r\n    scales: {\r\n      xAxes: [{\r\n        gridLines: {\r\n          color: 'rgba(0,0,0,0.02)',\r\n          zeroLineColor: 'rgba(0,0,0,0.02)'\r\n        },\r\n        stacked: true,\r\n        ticks: {\r\n          beginAtZero: true\r\n        }\r\n      }],\r\n      yAxes: [{\r\n        gridLines: {\r\n          color: 'rgba(0,0,0,0.02)',\r\n          zeroLineColor: 'rgba(0,0,0,0.02)'\r\n        },\r\n        stacked: true\r\n      }]\r\n    }\r\n  }, this.globalChartOptions);\r\n  \r\n  // Doughnut\r\n  public doughnutChartColors: any[] = [{\r\n    backgroundColor: [\"#f44336\", \"#3f51b5\", \"#ffeb3b\", \"#4caf50\", \"#2196f\"]\r\n  }];\r\n  public doughnutChartLabels: string[] = ['Download Sales', 'In-Store Sales', 'Mail-Order Sales'];\r\n  public doughnutChartData: number[] = [350, 450, 100];\r\n  public doughnutChartType: string = 'doughnut';\r\n  public doughnutOptions: any = Object.assign({\r\n    elements: {\r\n      arc: {\r\n        borderWidth: 0\r\n      }\r\n    }\r\n  }, this.globalChartOptions);\r\n  \r\n  // Line Chart\r\n  public lineChartData: Array < any > = [{\r\n    data: [6, 5, 8, 8, 5, 5, 4],\r\n    label: 'Series A',\r\n    borderWidth: 1\r\n  }, {\r\n    data: [5, 4, 4, 2, 6, 2, 5],\r\n    label: 'Series B',\r\n    borderWidth: 1\r\n  }];\r\n  public lineChartLabels: Array < any > = ['1', '2', '3', '4', '5', '6', '7'];\r\n  public lineChartOptions: any = Object.assign({\r\n    animation: false,\r\n    scales: {\r\n      xAxes: [{\r\n        gridLines: {\r\n          color: 'rgba(0,0,0,0.02)',\r\n          zeroLineColor: 'rgba(0,0,0,0.02)'\r\n        }\r\n      }],\r\n      yAxes: [{\r\n        gridLines: {\r\n          color: 'rgba(0,0,0,0.02)',\r\n          zeroLineColor: 'rgba(0,0,0,0.02)'\r\n        },\r\n        ticks: {\r\n          beginAtZero: true,\r\n          suggestedMax: 9,\r\n        }\r\n      }]\r\n    }\r\n  }, this.globalChartOptions);\r\n  public lineChartColors: Array < any > = [{ // grey\r\n    backgroundColor: \"#7986cb\",\r\n    borderColor: \"#3f51b5\",\r\n    pointBackgroundColor: \"#3f51b5\",\r\n    pointBorderColor: '#fff',\r\n    pointHoverBackgroundColor: '#fff',\r\n    pointHoverBorderColor: 'rgba(148,159,177,0.8)'\r\n  }, { // dark grey\r\n    backgroundColor: \"#eeeeee\",\r\n    borderColor: \"#e0e0e0\",\r\n    pointBackgroundColor: \"#e0e0e0\",\r\n    pointBorderColor: '#fff',\r\n    pointHoverBackgroundColor: '#fff',\r\n    pointHoverBorderColor: 'rgba(77,83,96,1)'\r\n  }, { // grey\r\n    backgroundColor: 'rgba(148,159,177,0.2)',\r\n    borderColor: 'rgba(148,159,177,1)',\r\n    pointBackgroundColor: 'rgba(148,159,177,1)',\r\n    pointBorderColor: '#fff',\r\n    pointHoverBackgroundColor: '#fff',\r\n    pointHoverBorderColor: 'rgba(148,159,177,0.8)'\r\n  }];\r\n  public lineChartLegend: boolean = true;\r\n  public lineChartType: string = 'line';\r\n  public lineChartSteppedData: Array < any > = [{\r\n    data: [6, 5, 8, 8, 5, 5, 4],\r\n    label: 'Series A',\r\n    borderWidth: 1,\r\n    fill: false,\r\n    steppedLine: true\r\n  }, {\r\n    data: [5, 4, 4, 2, 6, 2, 5],\r\n    label: 'Series B',\r\n    borderWidth: 1,\r\n    fill: false,\r\n    steppedLine: true\r\n  }];\r\n  public lineChartPointsData: Array < any > = [{\r\n    data: [6, 5, 8, 8, 5, 5, 4],\r\n    label: 'Series A',\r\n    borderWidth: 1,\r\n    fill: false,\r\n    pointRadius: 10,\r\n    pointHoverRadius: 15,\r\n    showLine: false\r\n  }, {\r\n    data: [5, 4, 4, 2, 6, 2, 5],\r\n    label: 'Series B',\r\n    borderWidth: 1,\r\n    fill: false,\r\n    pointRadius: 10,\r\n    pointHoverRadius: 15,\r\n    showLine: false\r\n  }];\r\n  public lineChartPointsOptions: any = Object.assign({\r\n    scales: {\r\n      xAxes: [{\r\n        gridLines: {\r\n          color: 'rgba(0,0,0,0.02)',\r\n          zeroLineColor: 'rgba(0,0,0,0.02)'\r\n        }\r\n      }],\r\n      yAxes: [{\r\n        gridLines: {\r\n          color: 'rgba(0,0,0,0.02)',\r\n          zeroLineColor: 'rgba(0,0,0,0.02)'\r\n        },\r\n        ticks: {\r\n          beginAtZero: true,\r\n          suggestedMax: 9,\r\n        }\r\n      }]\r\n    },\r\n    elements: {\r\n      point: {\r\n        pointStyle: 'rectRot',\r\n      }\r\n    }\r\n  }, this.globalChartOptions);\r\n\r\n  // Bubble Chart\r\n  public bubbleChartData: Array < any > = [{\r\n    data: [{\r\n      x: 6,\r\n      y: 5,\r\n      r: 15,\r\n    }, {\r\n      x: 5,\r\n      y: 4,\r\n      r: 10,\r\n    }, {\r\n      x: 8,\r\n      y: 4,\r\n      r: 6,\r\n    }, {\r\n      x: 8,\r\n      y: 4,\r\n      r: 6,\r\n    }, {\r\n      x: 5,\r\n      y: 14,\r\n      r: 14,\r\n    }, {\r\n      x: 5,\r\n      y: 6,\r\n      r: 8,\r\n    }, {\r\n      x: 4,\r\n      y: 2,\r\n      r: 10,\r\n    }],\r\n    label: 'Series A',\r\n    borderWidth: 1\r\n  }];\r\n  public bubbleChartType: string = 'bubble';\r\n\r\n  // Combo Chart\r\n  public ComboChartData: Array < any > = [{\r\n    data: [6, 5, 8, 8, 5, 5, 4],\r\n    label: 'Series A',\r\n    borderWidth: 1,\r\n    type: 'line',\r\n    fill: false\r\n  }, {\r\n    data: [5, 4, 4, 2, 6, 2, 5],\r\n    label: 'Series B',\r\n    borderWidth: 1,\r\n    type: 'bar',\r\n  }];\r\n  public ComboChartLabels: Array < any > = ['1', '2', '3', '4', '5', '6', '7'];\r\n  public ComboChartOptions: any = Object.assign({\r\n    animation: false,\r\n    scales: {\r\n      xAxes: [{\r\n        gridLines: {\r\n          color: 'rgba(0,0,0,0.02)',\r\n          zeroLineColor: 'rgba(0,0,0,0.02)'\r\n        }\r\n      }],\r\n      yAxes: [{\r\n        gridLines: {\r\n          color: 'rgba(0,0,0,0.02)',\r\n          zeroLineColor: 'rgba(0,0,0,0.02)'\r\n        },\r\n        ticks: {\r\n          beginAtZero: true,\r\n          suggestedMax: 9,\r\n        }\r\n      }]\r\n    }\r\n  }, this.globalChartOptions);\r\n  \r\n  // Pie\r\n  public pieChartLabels: string[] = ['Download Sales', 'In-Store Sales', 'Mail Sales'];\r\n  public pieChartData: number[] = [300, 500, 100];\r\n  public pieChartType: string = 'pie';\r\n  \r\n  // PolarArea\r\n  public polarAreaChartLabels: string[] = ['Download Sales', 'In-Store Sales', 'Mail Sales', 'Telesales', 'Corporate Sales'];\r\n  public polarAreaChartData: any = [300, 500, 100, 40, 120];\r\n  public polarAreaLegend: boolean = true;\r\n  public polarAreaChartType: string = 'polarArea';\r\n  \r\n  // Radar\r\n  public radarChartLabels: string[] = ['Eating', 'Drinking', 'Sleeping', 'Designing', 'Coding', 'Cycling', 'Running'];\r\n  public radarChartData: any = [{\r\n    data: [65, 59, 90, 81, 56, 55, 40],\r\n    label: 'Series A'\r\n  }, {\r\n    data: [28, 48, 40, 19, 96, 27, 100],\r\n    label: 'Series B'\r\n  }];\r\n  public radarChartType: string = 'radar';\r\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/chartlib/chartlib.component.ts","import { Routes } from \"@angular/router\";\r\n\r\nimport { ChartlibComponent } from './chartlib.component';\r\n\r\nexport const ChartlibRoutes: Routes = [{\r\n  path: '',\r\n  component: ChartlibComponent\r\n}];\n\n\n// WEBPACK FOOTER //\n// ./src/app/chartlib/chartlib.routing.ts","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chartlib/chartlib.component.scss\n// module id = 1115\n// module chunks = 9","module.exports = \"<div  fxLayout=\\\"row\\\"  fxLayoutWrap=\\\"wrap\\\">\\r\\n  <!-- bar -->\\r\\n  <div fxFlex.gt-sm=\\\"33.33\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\r\\n    <md-card>\\r\\n      <md-card-title>Bar</md-card-title>\\r\\n      <md-card-subtitle>Basic</md-card-subtitle>\\r\\n      <md-card-content>\\r\\n        <canvas height=\\\"200\\\" baseChart class=\\\"chart\\\"\\r\\n          [datasets]=\\\"barChartData\\\"\\r\\n          [labels]=\\\"barChartLabels\\\"\\r\\n          [options]=\\\"barChartOptions\\\"\\r\\n          [colors]=\\\"lineChartColors\\\"\\r\\n          [legend]=\\\"barChartLegend\\\"\\r\\n          [chartType]=\\\"barChartType\\\"></canvas>\\r\\n      </md-card-content>\\r\\n    </md-card>\\r\\n  </div>\\r\\n  <!-- bar -->\\r\\n  <div fxFlex.gt-sm=\\\"33.33\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\r\\n    <md-card>\\r\\n      <md-card-title>Bar</md-card-title>\\r\\n      <md-card-subtitle>Horizontal</md-card-subtitle>\\r\\n      <md-card-content>\\r\\n        <canvas height=\\\"200\\\" baseChart class=\\\"chart\\\"\\r\\n          [datasets]=\\\"barChartData\\\"\\r\\n          [labels]=\\\"barChartLabels\\\"\\r\\n          [options]=\\\"barChartHorizontalOptions\\\"\\r\\n          [colors]=\\\"lineChartColors\\\"\\r\\n          [legend]=\\\"barChartLegend\\\"\\r\\n          [chartType]=\\\"barChartHorizontalType\\\"></canvas>\\r\\n      </md-card-content>\\r\\n    </md-card>\\r\\n  </div>\\r\\n  <!-- bar -->\\r\\n  <div fxFlex.gt-sm=\\\"33.33\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\r\\n    <md-card>\\r\\n      <md-card-title>Bar</md-card-title>\\r\\n      <md-card-subtitle>Stacked</md-card-subtitle>\\r\\n      <md-card-content>\\r\\n        <canvas height=\\\"200\\\" baseChart class=\\\"chart\\\"\\r\\n          [datasets]=\\\"barChartData\\\"\\r\\n          [labels]=\\\"barChartLabels\\\"\\r\\n          [options]=\\\"barChartStackedOptions\\\"\\r\\n          [colors]=\\\"lineChartColors\\\"\\r\\n          [legend]=\\\"barChartLegend\\\"\\r\\n          [chartType]=\\\"barChartType\\\"></canvas>\\r\\n      </md-card-content>\\r\\n    </md-card>\\r\\n  </div>\\r\\n  <!-- line -->\\r\\n  <div fxFlex.gt-sm=\\\"33.33\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\r\\n    <md-card>\\r\\n      <md-card-title>Line</md-card-title>\\r\\n      <md-card-subtitle>Basic</md-card-subtitle>\\r\\n      <md-card-content>\\r\\n        <canvas height=\\\"200\\\" baseChart class=\\\"chart\\\"\\r\\n          [datasets]=\\\"lineChartData\\\"\\r\\n          [labels]=\\\"lineChartLabels\\\"\\r\\n          [options]=\\\"lineChartOptions\\\"\\r\\n          [colors]=\\\"lineChartColors\\\"\\r\\n          [legend]=\\\"lineChartLegend\\\"\\r\\n          [chartType]=\\\"lineChartType\\\"></canvas>\\r\\n      </md-card-content>\\r\\n    </md-card>\\r\\n  </div>\\r\\n  <!-- line -->\\r\\n  <div fxFlex.gt-sm=\\\"33.33\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\r\\n    <md-card>\\r\\n      <md-card-title>Line</md-card-title>\\r\\n      <md-card-subtitle>Stepped</md-card-subtitle>\\r\\n      <md-card-content>\\r\\n        <canvas height=\\\"200\\\" baseChart class=\\\"chart\\\"\\r\\n          [datasets]=\\\"lineChartSteppedData\\\"\\r\\n          [labels]=\\\"lineChartLabels\\\"\\r\\n          [options]=\\\"lineChartOptions\\\"\\r\\n          [colors]=\\\"lineChartColors\\\"\\r\\n          [legend]=\\\"lineChartLegend\\\"\\r\\n          [chartType]=\\\"lineChartType\\\"></canvas>\\r\\n      </md-card-content>\\r\\n    </md-card>\\r\\n  </div>\\r\\n  <!-- line -->\\r\\n  <div fxFlex.gt-sm=\\\"33.33\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\r\\n    <md-card>\\r\\n      <md-card-title>Line</md-card-title>\\r\\n      <md-card-subtitle>Points</md-card-subtitle>\\r\\n      <md-card-content>\\r\\n        <canvas height=\\\"250\\\" baseChart class=\\\"chart\\\"\\r\\n          [datasets]=\\\"lineChartPointsData\\\"\\r\\n          [labels]=\\\"lineChartLabels\\\"\\r\\n          [options]=\\\"lineChartPointsOptions\\\"\\r\\n          [colors]=\\\"lineChartColors\\\"\\r\\n          [legend]=\\\"lineChartLegend\\\"\\r\\n          [chartType]=\\\"lineChartType\\\"></canvas>\\r\\n      </md-card-content>\\r\\n    </md-card>\\r\\n  </div>\\r\\n  <!-- mixed -->\\r\\n  <div fxFlex.gt-sm=\\\"33.33\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\r\\n    <md-card>\\r\\n      <md-card-title>Mixed</md-card-title>\\r\\n      <md-card-subtitle>Mix different charts</md-card-subtitle>\\r\\n      <md-card-content>\\r\\n        <canvas height=\\\"200\\\" baseChart class=\\\"chart\\\"\\r\\n          [datasets]=\\\"ComboChartData\\\"\\r\\n          [labels]=\\\"lineChartLabels\\\"\\r\\n          [options]=\\\"ComboChartOptions\\\"\\r\\n          [colors]=\\\"lineChartColors\\\"\\r\\n          [legend]=\\\"lineChartLegend\\\"\\r\\n          [chartType]=\\\"barChartType\\\"></canvas>\\r\\n      </md-card-content>\\r\\n    </md-card>\\r\\n  </div>\\r\\n  <!-- bubble -->\\r\\n  <div fxFlex.gt-sm=\\\"33.33\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\r\\n    <md-card>\\r\\n      <md-card-title>Bubble</md-card-title>\\r\\n      <md-card-subtitle>Display three dimensions of data</md-card-subtitle>\\r\\n      <md-card-content>\\r\\n        <canvas height=\\\"200\\\" baseChart class=\\\"chart\\\"\\r\\n          [datasets]=\\\"bubbleChartData\\\"\\r\\n          [labels]=\\\"lineChartLabels\\\"\\r\\n          [options]=\\\"lineChartOptions\\\"\\r\\n          [colors]=\\\"lineChartColors\\\"\\r\\n          [legend]=\\\"lineChartLegend\\\"\\r\\n          [chartType]=\\\"bubbleChartType\\\"></canvas>\\r\\n      </md-card-content>\\r\\n    </md-card>\\r\\n  </div>\\r\\n  <!-- doughnut -->\\r\\n  <div fxFlex.gt-sm=\\\"33.33\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\r\\n    <md-card>\\r\\n      <md-card-title>Doughnut</md-card-title>\\r\\n      <md-card-subtitle>Pie chart with a cutout</md-card-subtitle>\\r\\n      <md-card-content>\\r\\n        <canvas height=\\\"200\\\" baseChart class=\\\"chart\\\"\\r\\n          [data]=\\\"doughnutChartData\\\"\\r\\n          [labels]=\\\"doughnutChartLabels\\\"\\r\\n          [options]=\\\"doughnutOptions\\\"\\r\\n          [colors]=\\\"doughnutChartColors\\\"\\r\\n          [legend]=\\\"doughnutChartLegend\\\"\\r\\n          [chartType]=\\\"doughnutChartType\\\"></canvas>\\r\\n      </md-card-content>\\r\\n    </md-card>\\r\\n  </div>\\r\\n  <!-- pie -->\\r\\n  <div fxFlex.gt-sm=\\\"33.33\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\r\\n    <md-card>\\r\\n      <md-card-title>Pie</md-card-title>\\r\\n      <md-card-subtitle>Without the cutout</md-card-subtitle>\\r\\n      <md-card-content>\\r\\n        <canvas height=\\\"260\\\" baseChart class=\\\"chart\\\"\\r\\n          [data]=\\\"pieChartData\\\"\\r\\n          [options]=\\\"doughnutOptions\\\"\\r\\n          [colors]=\\\"doughnutChartColors\\\"\\r\\n          [labels]=\\\"pieChartLabels\\\"\\r\\n          [chartType]=\\\"pieChartType\\\"></canvas>\\r\\n      </md-card-content>\\r\\n    </md-card>\\r\\n  </div>\\r\\n  <!-- polar -->\\r\\n  <div fxFlex.gt-sm=\\\"33.33\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\r\\n    <md-card>\\r\\n      <md-card-title>Polar area</md-card-title>\\r\\n      <md-card-subtitle>Each segment has the same angle</md-card-subtitle>\\r\\n      <md-card-content>\\r\\n        <canvas height=\\\"200\\\" baseChart class=\\\"chart\\\"\\r\\n          [data]=\\\"polarAreaChartData\\\"\\r\\n          [options]=\\\"doughnutOptions\\\"\\r\\n          [colors]=\\\"doughnutChartColors\\\"\\r\\n          [labels]=\\\"polarAreaChartLabels\\\"\\r\\n          [legend]=\\\"polarAreaLegend\\\"\\r\\n          [chartType]=\\\"polarAreaChartType\\\"></canvas>\\r\\n      </md-card-content>\\r\\n    </md-card>\\r\\n  </div>\\r\\n  <!-- radar -->\\r\\n  <div fxFlex.gt-sm=\\\"33.33\\\" fxFlex.gt-xs=\\\"50\\\" fxFlex=\\\"100\\\">\\r\\n    <md-card>\\r\\n      <md-card-title>Radar</md-card-title>\\r\\n      <md-card-subtitle>Multiple data points and the variation between them</md-card-subtitle>\\r\\n      <md-card-content>\\r\\n        <canvas height=\\\"230\\\" baseChart class=\\\"chart\\\"\\r\\n          [datasets]=\\\"radarChartData\\\"\\r\\n          [options]=\\\"globalChartOptions\\\"\\r\\n          [colors]=\\\"lineChartColors\\\"\\r\\n          [labels]=\\\"radarChartLabels\\\"\\r\\n          [chartType]=\\\"radarChartType\\\"></canvas>\\r\\n      </md-card-content>\\r\\n    </md-card>\\r\\n  </div>\\r\\n</div>\\r\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/chartlib/chartlib.component.html\n// module id = 1160\n// module chunks = 9","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { CommonModule } from '@angular/common';\r\nimport { MdCardModule } from \"@angular/material\";\r\nimport { FlexLayoutModule } from \"@angular/flex-layout\";\r\n\r\nimport { ChartsModule } from 'ng2-charts/ng2-charts';\r\nimport { ChartlibComponent } from './chartlib.component';\r\nimport { ChartlibRoutes } from './chartlib.routing';\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule.forChild(ChartlibRoutes), ChartsModule, MdCardModule, FlexLayoutModule],\r\n  declarations: [ChartlibComponent]\r\n})\r\n\r\nexport class ChartlibModule {}\n\n\n// WEBPACK FOOTER //\n// ./src/app/chartlib/chartlib.module.ts","\"use strict\";\nvar core_1 = require('@angular/core');\n/* tslint:disable-next-line */\nvar BaseChartDirective = (function () {\n    function BaseChartDirective(element) {\n        this.labels = [];\n        this.options = {};\n        this.chartClick = new core_1.EventEmitter();\n        this.chartHover = new core_1.EventEmitter();\n        this.initFlag = false;\n        this.element = element;\n    }\n    BaseChartDirective.prototype.ngOnInit = function () {\n        this.ctx = this.element.nativeElement.getContext('2d');\n        this.cvs = this.element.nativeElement;\n        this.initFlag = true;\n        if (this.data || this.datasets) {\n            this.refresh();\n        }\n    };\n    BaseChartDirective.prototype.ngOnChanges = function (changes) {\n        if (this.initFlag) {\n            // Check if the changes are in the data or datasets\n            if (changes.hasOwnProperty('data') || changes.hasOwnProperty('datasets')) {\n                if (changes['data']) {\n                    this.updateChartData(changes['data'].currentValue);\n                }\n                else {\n                    this.updateChartData(changes['datasets'].currentValue);\n                }\n                this.chart.update();\n            }\n            else {\n                // otherwise rebuild the chart\n                this.refresh();\n            }\n        }\n    };\n    BaseChartDirective.prototype.ngOnDestroy = function () {\n        if (this.chart) {\n            this.chart.destroy();\n            this.chart = void 0;\n        }\n    };\n    BaseChartDirective.prototype.getChartBuilder = function (ctx /*, data:Array<any>, options:any*/) {\n        var _this = this;\n        var datasets = this.getDatasets();\n        var options = Object.assign({}, this.options);\n        if (this.legend === false) {\n            options.legend = { display: false };\n        }\n        // hock for onHover and onClick events\n        options.hover = options.hover || {};\n        if (!options.hover.onHover) {\n            options.hover.onHover = function (active) {\n                if (active && !active.length) {\n                    return;\n                }\n                _this.chartHover.emit({ active: active });\n            };\n        }\n        if (!options.onClick) {\n            options.onClick = function (event, active) {\n                _this.chartClick.emit({ event: event, active: active });\n            };\n        }\n        var opts = {\n            type: this.chartType,\n            data: {\n                labels: this.labels,\n                datasets: datasets\n            },\n            options: options\n        };\n        if (typeof Chart === 'undefined') {\n            throw new Error('ng2-charts configuration issue: Embedding Chart.js lib is mandatory');\n        }\n        return new Chart(ctx, opts);\n    };\n    BaseChartDirective.prototype.updateChartData = function (newDataValues) {\n        if (Array.isArray(newDataValues[0].data)) {\n            this.chart.data.datasets.forEach(function (dataset, i) {\n                dataset.data = newDataValues[i].data;\n                if (newDataValues[i].label) {\n                    dataset.label = newDataValues[i].label;\n                }\n            });\n        }\n        else {\n            this.chart.data.datasets[0].data = newDataValues;\n        }\n    };\n    BaseChartDirective.prototype.getDatasets = function () {\n        var _this = this;\n        var datasets = void 0;\n        // in case if datasets is not provided, but data is present\n        if (!this.datasets || !this.datasets.length && (this.data && this.data.length)) {\n            if (Array.isArray(this.data[0])) {\n                datasets = this.data.map(function (data, index) {\n                    return { data: data, label: _this.labels[index] || \"Label \" + index };\n                });\n            }\n            else {\n                datasets = [{ data: this.data, label: \"Label 0\" }];\n            }\n        }\n        if (this.datasets && this.datasets.length ||\n            (datasets && datasets.length)) {\n            datasets = (this.datasets || datasets)\n                .map(function (elm, index) {\n                var newElm = Object.assign({}, elm);\n                if (_this.colors && _this.colors.length) {\n                    Object.assign(newElm, _this.colors[index]);\n                }\n                else {\n                    Object.assign(newElm, getColors(_this.chartType, index, newElm.data.length));\n                }\n                return newElm;\n            });\n        }\n        if (!datasets) {\n            throw new Error(\"ng-charts configuration error,\\n      data or datasets field are required to render char \" + this.chartType);\n        }\n        return datasets;\n    };\n    BaseChartDirective.prototype.refresh = function () {\n        // if (this.options && this.options.responsive) {\n        //   setTimeout(() => this.refresh(), 50);\n        // }\n        // todo: remove this line, it is producing flickering\n        this.ngOnDestroy();\n        this.chart = this.getChartBuilder(this.ctx /*, data, this.options*/);\n    };\n    BaseChartDirective.defaultColors = [\n        [255, 99, 132],\n        [54, 162, 235],\n        [255, 206, 86],\n        [231, 233, 237],\n        [75, 192, 192],\n        [151, 187, 205],\n        [220, 220, 220],\n        [247, 70, 74],\n        [70, 191, 189],\n        [253, 180, 92],\n        [148, 159, 177],\n        [77, 83, 96]\n    ];\n    BaseChartDirective.decorators = [\n        { type: core_1.Directive, args: [{ selector: 'canvas[baseChart]', exportAs: 'base-chart' },] },\n    ];\n    /** @nocollapse */\n    BaseChartDirective.ctorParameters = function () { return [\n        { type: core_1.ElementRef, },\n    ]; };\n    BaseChartDirective.propDecorators = {\n        'data': [{ type: core_1.Input },],\n        'datasets': [{ type: core_1.Input },],\n        'labels': [{ type: core_1.Input },],\n        'options': [{ type: core_1.Input },],\n        'chartType': [{ type: core_1.Input },],\n        'colors': [{ type: core_1.Input },],\n        'legend': [{ type: core_1.Input },],\n        'chartClick': [{ type: core_1.Output },],\n        'chartHover': [{ type: core_1.Output },],\n    };\n    return BaseChartDirective;\n}());\nexports.BaseChartDirective = BaseChartDirective;\nfunction rgba(colour, alpha) {\n    return 'rgba(' + colour.concat(alpha).join(',') + ')';\n}\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nfunction formatLineColor(colors) {\n    return {\n        backgroundColor: rgba(colors, 0.4),\n        borderColor: rgba(colors, 1),\n        pointBackgroundColor: rgba(colors, 1),\n        pointBorderColor: '#fff',\n        pointHoverBackgroundColor: '#fff',\n        pointHoverBorderColor: rgba(colors, 0.8)\n    };\n}\nfunction formatBarColor(colors) {\n    return {\n        backgroundColor: rgba(colors, 0.6),\n        borderColor: rgba(colors, 1),\n        hoverBackgroundColor: rgba(colors, 0.8),\n        hoverBorderColor: rgba(colors, 1)\n    };\n}\nfunction formatPieColors(colors) {\n    return {\n        backgroundColor: colors.map(function (color) { return rgba(color, 0.6); }),\n        borderColor: colors.map(function () { return '#fff'; }),\n        pointBackgroundColor: colors.map(function (color) { return rgba(color, 1); }),\n        pointBorderColor: colors.map(function () { return '#fff'; }),\n        pointHoverBackgroundColor: colors.map(function (color) { return rgba(color, 1); }),\n        pointHoverBorderColor: colors.map(function (color) { return rgba(color, 1); })\n    };\n}\nfunction formatPolarAreaColors(colors) {\n    return {\n        backgroundColor: colors.map(function (color) { return rgba(color, 0.6); }),\n        borderColor: colors.map(function (color) { return rgba(color, 1); }),\n        hoverBackgroundColor: colors.map(function (color) { return rgba(color, 0.8); }),\n        hoverBorderColor: colors.map(function (color) { return rgba(color, 1); })\n    };\n}\nfunction getRandomColor() {\n    return [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];\n}\n/**\n * Generate colors for line|bar charts\n * @param index\n * @returns {number[]|Color}\n */\nfunction generateColor(index) {\n    return BaseChartDirective.defaultColors[index] || getRandomColor();\n}\n/**\n * Generate colors for pie|doughnut charts\n * @param count\n * @returns {Colors}\n */\nfunction generateColors(count) {\n    var colorsArr = new Array(count);\n    for (var i = 0; i < count; i++) {\n        colorsArr[i] = BaseChartDirective.defaultColors[i] || getRandomColor();\n    }\n    return colorsArr;\n}\n/**\n * Generate colors by chart type\n * @param chartType\n * @param index\n * @param count\n * @returns {Color}\n */\nfunction getColors(chartType, index, count) {\n    if (chartType === 'pie' || chartType === 'doughnut') {\n        return formatPieColors(generateColors(count));\n    }\n    if (chartType === 'polarArea') {\n        return formatPolarAreaColors(generateColors(count));\n    }\n    if (chartType === 'line' || chartType === 'radar') {\n        return formatLineColor(generateColor(index));\n    }\n    if (chartType === 'bar' || chartType === 'horizontalBar') {\n        return formatBarColor(generateColor(index));\n    }\n    return generateColor(index);\n}\nvar ChartsModule = (function () {\n    function ChartsModule() {\n    }\n    ChartsModule.decorators = [\n        { type: core_1.NgModule, args: [{\n                    declarations: [\n                        BaseChartDirective\n                    ],\n                    exports: [\n                        BaseChartDirective\n                    ],\n                    imports: []\n                },] },\n    ];\n    /** @nocollapse */\n    ChartsModule.ctorParameters = function () { return []; };\n    return ChartsModule;\n}());\nexports.ChartsModule = ChartsModule;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-charts/charts/charts.js\n// module id = 978\n// module chunks = 4 8 9","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require('./charts/charts'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-charts/index.js\n// module id = 979\n// module chunks = 4 8 9","\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\n__export(require('./index'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/ng2-charts/ng2-charts.js\n// module id = 980\n// module chunks = 4 8 9"],"sourceRoot":""}